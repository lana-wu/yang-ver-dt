



Network Working Group                                          B. Claise
Internet-Draft                                                 J. Clarke
Intended status: Standards Track                               R. Rahman
Expires: February 16, 2020                                R. Wilton, Ed.
                                                     Cisco Systems, Inc.
                                                              B. Lengyel
                                                                Ericsson
                                                               J. Sterne
                                                                   Nokia
                                                              K. D'Souza
                                                                    AT&T
                                                         August 15, 2019


                  YANG Semantic Versioning for Modules
                   draft-verdt-netmod-yang-semver-01

Abstract

   This document specifies a scheme for applying a modified set of
   semantic versioning rules to revisions of YANG modules.
   Additionally, this document defines a revision label for this
   modified semver scheme based on the specification in draft-verdt-
   netmod-yang-module-versioning.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on February 16, 2020.

Copyright Notice

   Copyright (c) 2019 IETF Trust and the persons identified as the
   document authors.  All rights reserved.





Claise, et al.          Expires February 16, 2020               [Page 1]

Internet-Draft                 YANG Semver                   August 2019


   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (https://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
   2.  Terminology and Conventions . . . . . . . . . . . . . . . . .   3
   3.  YANG Semantic Versioning  . . . . . . . . . . . . . . . . . .   3
     3.1.  YANG Semantic Versioning Scheme for Modules . . . . . . .   3
       3.1.1.  Examples for YANG semantic version numbers  . . . . .   5
     3.2.  YANG Semantic Version Update Rules  . . . . . . . . . . .   6
     3.3.  Examples of the YANG Semver Label . . . . . . . . . . . .   7
   4.  Import by Semantic Version  . . . . . . . . . . . . . . . . .   9
   5.  Contributors  . . . . . . . . . . . . . . . . . . . . . . . .   9
   6.  Security Considerations . . . . . . . . . . . . . . . . . . .  10
   7.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .  10
   8.  References  . . . . . . . . . . . . . . . . . . . . . . . . .  10
     8.1.  Normative References  . . . . . . . . . . . . . . . . . .  10
     8.2.  Informative References  . . . . . . . . . . . . . . . . .  11
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  11

1.  Introduction

   [I-D.verdt-netmod-yang-module-versioning] puts forth a number of
   concepts relating to modified rules for updating YANG modules, a
   means to signal when a new revision of a YANG module has non-
   backwards-compatible (NBC) changes compared to its previous revision,
   and a versioning scheme YANG modules that uses the revision history
   as a lineage for determining from where a specific revision of a YANG
   module was derived.  Additionally, section 3.3 of
   [I-D.verdt-netmod-yang-module-versioning] defines a revision label
   which can be used as an overlay or alias to provide additional
   context or an additional way to refer to a specific revision.

   This document defines a labeling scheme that uses modified [semver]
   rules for YANG modules as well as the revision label definition for
   using this scheme.  The label and rules defined herein is the
   RECOMMENDED revision label scheme for IETF modules.






Claise, et al.          Expires February 16, 2020               [Page 2]

Internet-Draft                 YANG Semver                   August 2019


2.  Terminology and Conventions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in BCP
   14 [RFC2119] [RFC8174] when, and only when, they appear in all
   capitals, as shown here.

3.  YANG Semantic Versioning

   This section defines YANG Semantic Versioning, explains how it is
   used with YANG modules, and the rules associated with changing a
   module's semantic version number when the module definitions are
   updated.

3.1.  YANG Semantic Versioning Scheme for Modules

   This document defines the YANG semantic versioning scheme that is
   used for YANG modules that employ the semver revision label.  The
   versioning scheme has the following properties:

      The YANG semantic versioning scheme is extended from version 2.0.0
      of the semantic versioning scheme defined at semver.org [semver]
      to cover the additional requirements for the management of YANG
      module lifecyles that cannot be addressed using the semver.org
      2.0.0 versioning scheme alone.

      Unlike the semver.org 2.0.0 versioning scheme, the YANG semantic
      versioning scheme supports limited updates to older versions of
      YANG modules, to allow for bug fixes and enhancements to module
      versions that are not the latest.  However, it does not provide
      for the unlimited branching and updating of older revisions which
      are provided by the general rules in
      [I-D.verdt-netmod-yang-module-versioning].

      Module definitions that follow the semver.org 2.0.0 versioning
      scheme are fully compatible with implementations that understand
      the YANG semantic versioning scheme.

      If module updates are always restricted to the latest version of
      the module only, then the version numbers used by the YANG
      semantic versioning scheme are exactly the same as those defined
      by the semver.org 2.0.0 versioning scheme.

   Every YANG module versioned using the YANG semantic versioning scheme
   specifies the module's semantic version number as the argument to the
   'rev:revision-label' statement.




Claise, et al.          Expires February 16, 2020               [Page 3]

Internet-Draft                 YANG Semver                   August 2019


   Because the rules put forth in
   [I-D.verdt-netmod-yang-module-versioning] are designed to work well
   with existing versions of YANG and allow for module authors to
   migrate to this scheme, it is not expected that all revisions of a
   given YANG module will have a semantic version label.  For example,
   the first revision of a module may have been produced before this
   scheme was available.  However, once semver is introduced as a
   reivison label, all subsequent revisions MUST have revision label
   with a semver value using the rules described below.

   "The YANG semver version number is expressed as a string of the form:
   'X.Y.Zv'; where X, Y, and Z each represent non-negative integers
   smaller than 32768, and v represents an optional single character
   suffix: 'm' or 'M'.

   o  'X' is the MAJOR version.  Changes in the major version number
      indicate changes that are non-backwards-compatible to versions
      with a lower major version number.

   o  'Y' is the MINOR version.  Changes in the minor version number
      indicate changes that are backwards-compatible to versions with
      the same major version number, but a lower minor version number
      and no patch 'm' or 'M' modifier.

   o  'Zv' is the PATCH version and modifier.  Changes in the patch
      version number can indicate editorial, backwards-compatible, or
      non-backwards-compatible changes relative to versions with the
      same major and minor version numbers, but lower patch version
      number, depending on what form modifier 'v' takes:

      *  If the modifier letter is absent, the change represents an
         editorial change

      *  'm' - the change represents a backwards-compatible change

      *  'M' - the change represents a non-backwards-compatible change
         (i.e., when the rev:nbc-changes statement is applied to a
         revision)

   The YANG module name and YANG semantic version number uniquely
   identifies a revision of a module, with an associated revision date.
   There MUST NOT be multiple instances of a YANG module definition with
   the same module name and YANG semantic version number but different
   content or revision dates.

   There MUST NOT be multiple versions of a YANG module that have the
   same MAJOR, MINOR and PATCH version numbers, but different patch




Claise, et al.          Expires February 16, 2020               [Page 4]

Internet-Draft                 YANG Semver                   August 2019


   modifier letters.  E.g., module version "1.2.3M" MUST NOT be defined
   if module version "1.2.3" has already been defined.

3.1.1.  Examples for YANG semantic version numbers

   The following diagram and explanation illustrates how YANG semantic
   version numbers work.

   Example YANG semantic version numbers for an example module:

           0.1.0
             |
           0.2.0
             |
           1.0.0
             |  \
             |   1.1.0 -> 1.1.1m -> 1.1.2M
             |    |
             |   1.2.0 -> 1.2.1M -> 1.2.2M
             |    |
             |   1.3.0 -> 1.3.1
             |
           2.0.0
             |
           3.0.0
                \
                 3.1.0

   The tree diagram above illustrates how an example module's version
   history might evolve.  For example, the tree might represent the
   following changes, listed in chronological order from oldest revision
   to newest:

      0.1.0 - first beta module version

      0.2.0 - second beta module version (with NBC changes)

      1.0.0 - first release (may have NBC changes from 0.2.0)

      1.1.0 - added new functionality, leaf "foo" (BC)

      1.2.0 - added new functionality, leaf "baz" (BC)

      1.3.0 - improve existing functionality, added leaf "foo-64" (BC)

      1.3.1 - improve description wording for "foo-64" (Editorial)





Claise, et al.          Expires February 16, 2020               [Page 5]

Internet-Draft                 YANG Semver                   August 2019


      1.1.1m - backport "foo-64" leaf to 1.1.x to avoid implementing
      "baz" from 1.2.0 (BC)

      2.0.0 - change existing model for performance reasons, e.g. re-key
      list (NBC)

      1.1.2M - NBC point bug fix, not required in 2.0.0 due to model
      changes (NBC)

      3.0.0 - NBC bugfix, rename "baz" to "bar"; also add new BC leaf
      "wibble"; (NBC)

      1.2.1M - backport NBC fix, changing "baz" to "bar"

      1.2.2M - backport "wibble".  This is a BC change but "M" modifier
      is sticky.

      3.1.0 - introduce new leaf "wobble" (BC)

   The partial ordering relationships based on the semantic versioning
   numbers can be defined as follows:

      1.0.0 < 1.1.0 < 1.2.0 < 1.3.0 < 2.0.0 < 3.0.0 < 3.1.0

      1.0.0 < 1.1.0 < 1.1.1m < 1.1.2M

      1.0.0 < 1.1.0 < 1.2.0 < 1.2.1M < 1.2.2M

   There is no ordering relationship between 1.1.1M and either 1.2.0 or
   1.2.1M, except that they share the common ancestor of 1.1.0.

   Looking at the version number alone, the module definition in 2.0.0
   does not necessarily contain the contents of 1.3.0.  However, the
   module revision history in 2.0.0 would likely indicate that it was
   edited from module version 1.3.0.

3.2.  YANG Semantic Version Update Rules

   When a new revision of a module is produced, then the following rules
   define how the YANG semantic version number for the new module
   revision is calculated, based on the changes between the two module
   revisions, and the YANG semantic version number of the base module
   revision that the changes are derived from:

   1.  If a module is being updated in a non-backwards-compatible way
       (i.e., the rev:nbc-changes statement is used on the current
       revision), then the module version "X.Y.Z[m|M]" MUST be updated
       to "X+1.0.0" unless that module version has already been defined



Claise, et al.          Expires February 16, 2020               [Page 6]

Internet-Draft                 YANG Semver                   August 2019


       with different content, in which case the module version
       "X.Y.Z+1M" MUST be used instead.

   2.  If a module is being updated in a backwards-compatible way, then
       the next version number depends on the format of the current
       version number:

       i     "X.Y.Z" - the module version MUST be updated to "X.Y+1.0",
             unless that module version has already been defined with
             different content, when the module version MUST be updated
             to "X.Y.Z+1m" instead.

       ii    "X.Y.Zm" - the module version MUST be updated to
             "X.Y.Z+1m".

       iii   "X.Y.ZM" - the module version MUST be updated to
             "X.Y.Z+1M".

   3.  If a module is being updated in an editorial way, then the next
       version number depends on the format of the current version
       number:

       i     "X.Y.Z" - the module version MUST be updated to "X.Y.Z+1"

       ii    "X.Y.Zm" - the module version MUST be updated to
             "X.Y.Z+1m".

       iii   "X.Y.ZM" - the module version MUST be updated to
             "X.Y.Z+1M".

   4.  YANG module semantic version numbers beginning with 0, i.e
       "0.X.Y" are regarded as beta definitions and need not follow the
       rules above.  Either the MINOR or PATCH version numbers may be
       updated, regardless of whether the changes are non-backwards-
       compatible, backwards-compatible, or editorial.

3.3.  Examples of the YANG Semver Label

   Below is a sample YANG module that uses the YANG semver revision
   label based on the rules defined in this document.

       module yang-module-name {

         namespace "name-space";
         prefix "prefix-name";

         import ietf-yang-revisions { prefix "rev"; }




Claise, et al.          Expires February 16, 2020               [Page 7]

Internet-Draft                 YANG Semver                   August 2019


         description
           "to be completed";

         revision 2018-02-28 {
           description "Added leaf 'wobble'";
           rev:revision-label "3.1.0";
         }

         revision 2017-12-31 {
           description "Rename 'baz' to 'bar', added leaf 'wibble'";
           rev:revision-label "3.0.0";
           rev:nbc-changes;
         }

         revision 2017-10-30 {
           description "Change the module structure";
           rev:revision-label "2.0.0";
           rev:nbc-changes;
         }

         revision 2017-08-30 {
           description "Clarified description of 'foo-64' leaf";
           rev:revision-label "1.3.1";
         }

         revision 2017-07-30 {
           description "Added leaf foo-64";
           rev:revision-label "1.3.0";
         }

         revision 2017-04-20 {
           description "Add new functionality, leaf 'baz'";
           rev:revision-label "1.2.0";
         }

         revision 2017-04-03 {
           description "Add new functionality, leaf 'foo'";
           rev:revision-label "1.1.0";
         }

         revision 2017-04-03 {
           description "First release version.";
           rev:revision-label "1.0.0";
         }

         // Note: semver rules do not apply to 0.X.Y labels.

         revision 2017-01-30 {



Claise, et al.          Expires February 16, 2020               [Page 8]

Internet-Draft                 YANG Semver                   August 2019


           description "NBC changes to initial revision";
           semver:module-version "0.2.0";
         }

         revision 2017-01-26 {
           description "Initial module version";
           semver:module-version "0.1.0";
         }

         //YANG module definition starts here

4.  Import by Semantic Version

   [I-D.verdt-netmod-yang-module-versioning] allows for imports to be
   done based on a module or a derived revision of a module.  The
   rev:revision-or-derived statement can specify either a revision date
   or a revision label.  When importing by semver, the YANG semver
   revision label value MAY be used as an argument to rev:revision-or-
   derived.  In so, any module which has that semver label as its latest
   revision label or has that label in its revision history can be used
   to satisfy the import requirement.  For example:

           import example-module {
             rev:revision-or-derived "3.0.0";
           }

   Note: the import lookup does not stop when a non-backward-compatible
   change is encountered.

5.  Contributors

   This document grew out of the YANG module versioning design team that
   started after IETF 101.  The design team consists of the following
   members whom have worked on the YANG versioning project:

   o  Balazs Lengyel

   o  Benoit Claise

   o  Ebben Aries

   o  Jason Sterne

   o  Joe Clarke

   o  Juergen Schoenwaelder

   o  Mahesh Jethanandani



Claise, et al.          Expires February 16, 2020               [Page 9]

Internet-Draft                 YANG Semver                   August 2019


   o  Michael (Wangzitao)

   o  Qin Wu

   o  Reshad Rahman

   o  Rob Wilton

   The initial revision of this document was refactored and built upon
   [I-D.clacla-netmod-yang-model-update].

   Discussons on the use of Semver for YANG versioning has been held
   with authors of the OpenConfig YANG models based on their own
   [openconfigsemver].  We would like thank both Anees Shaikh and Rob
   Shakir for their input into this problem space.

6.  Security Considerations

   The document does not define any new protocol or data model.  There
   are no security impacts.

7.  IANA Considerations

   None.

8.  References

8.1.  Normative References

   [I-D.verdt-netmod-yang-module-versioning]
              Claise, B., Clarke, J., Rahman, R., Wilton, R., Lengyel,
              B., Sterne, J., and K. D'Souza, "Updated YANG Module
              Revision Handling", draft-verdt-netmod-yang-module-
              versioning-00 (work in progress), July 2019.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/info/rfc2119>.

   [RFC7895]  Bierman, A., Bjorklund, M., and K. Watsen, "YANG Module
              Library", RFC 7895, DOI 10.17487/RFC7895, June 2016,
              <https://www.rfc-editor.org/info/rfc7895>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/info/rfc8174>.




Claise, et al.          Expires February 16, 2020              [Page 10]

Internet-Draft                 YANG Semver                   August 2019


   [RFC8525]  Bierman, A., Bjorklund, M., Schoenwaelder, J., Watsen, K.,
              and R. Wilton, "YANG Library", RFC 8525,
              DOI 10.17487/RFC8525, March 2019,
              <https://www.rfc-editor.org/info/rfc8525>.

8.2.  Informative References

   [I-D.clacla-netmod-yang-model-update]
              Claise, B., Clarke, J., Lengyel, B., and K. D'Souza, "New
              YANG Module Update Procedure", draft-clacla-netmod-yang-
              model-update-06 (work in progress), July 2018.

   [I-D.ietf-netmod-yang-instance-file-format]
              Lengyel, B. and B. Claise, "YANG Instance Data File
              Format", draft-ietf-netmod-yang-instance-file-format-04
              (work in progress), August 2019.

   [openconfigsemver]
              "Semantic Versioning for Openconfig Models",
              <http://www.openconfig.net/docs/semver/>.

   [semver]   "Semantic Versioning 2.0.0", <https://www.semver.org>.

Authors' Addresses

   Benoit Claise
   Cisco Systems, Inc.
   De Kleetlaan 6a b1
   1831 Diegem
   Belgium

   Phone: +32 2 704 5622
   Email: bclaise@cisco.com


   Joe Clarke
   Cisco Systems, Inc.
   7200-12 Kit Creek Rd
   Research Triangle Park, North Carolina
   United States of America

   Phone: +1-919-392-2867
   Email: jclarke@cisco.com








Claise, et al.          Expires February 16, 2020              [Page 11]

Internet-Draft                 YANG Semver                   August 2019


   Reshad Rahman
   Cisco Systems, Inc.

   Email: rrahman@cisco.com


   Robert Wilton (editor)
   Cisco Systems, Inc.

   Email: rwilton@cisco.com


   Balazs Lengyel
   Ericsson
   Magyar Tudosok Korutja
   1117 Budapest
   Hungary

   Phone: +36-70-330-7909
   Email: balazs.lengyel@ericsson.com


   Jason Sterne
   Nokia

   Email: jason.sterne@nokia.com


   Kevin D'Souza
   AT&T
   200 S. Laurel Ave
   Middletown, NJ
   United States of America

   Email: kd6913@att.com
















Claise, et al.          Expires February 16, 2020              [Page 12]

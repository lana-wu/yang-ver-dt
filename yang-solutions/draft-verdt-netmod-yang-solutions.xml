<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
  <!ENTITY RFC6020 SYSTEM "reference.RFC.6020.xml">
  <!ENTITY RFC7895 SYSTEM "reference.RFC.7895.xml">
  <!ENTITY RFC7950 SYSTEM "reference.RFC.7950.xml">
  <!ENTITY RFC8199 SYSTEM "reference.RFC.8199.xml">
  <!ENTITY RFC8299 SYSTEM "reference.RFC.8299.xml">
  <!ENTITY RFC8049 SYSTEM "reference.RFC.8049.xml">
  <!ENTITY RFC2119 SYSTEM "reference.RFC.2119.xml">
]>
<?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
<?rfc toc="yes"?>
<?rfc tocompact="yes"?>
<?rfc tocdepth="4"?>
<?rfc tocindent="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<rfc category="info" ipr="trust200902" docName="draft-verdt-netmod-yang-solutions-03">
  <front>
    <title abbrev="YANG Versioning Solution Overview">YANG Versioning Solution Overview</title>

    <author initials="R." role="editor" surname="Wilton" fullname="Robert Wilton">
      <organization abbrev="Cisco Systems, Inc.">
	Cisco Systems, Inc.
      </organization>
      <address>
	<email>rwilton@cisco.com</email>
      </address>
    </author>

    <date/>
    <abstract>
      <t>
	This document gives an overview of the different documents
	that comprise a full solution to the YANG versioning
	requirements document.  The purpose of this document is to
	help readers understand how the discrete parts of the YANG
	versioning solution fit together during working group
	development of the solution documents.
      </t>
    </abstract>

  </front>
  <middle>
    <section anchor="intro" title="Introduction">
      <t><xref target="I-D.ietf-netmod-yang-versioning-reqs"/>
      documents the requirements for any solution to the YANG <xref
      target="RFC7950"/> versioning problem.  In particular, chapter 5
      lists the formal requirements that a solution requires.</t>
      <t>The complete solution to all of the YANG versioning
      requirements is comprised of five documents, each addressing
      different aspects of the solution.  These documents are:
      <list style="numbers">
	<t><xref target="I-D.verdt-netmod-yang-module-versioning"/></t>
	<t><xref target="I-D.verdt-netmod-yang-semver"/></t>
	<t><xref target="I-D.rwilton-netmod-yang-packages"/></t>
	<t><xref target="I-D.wilton-netmod-yang-ver-selection"/></t>
	<t><xref target="I-D.verdt-netmod-yang-schema-comparison"/></t>
      </list>
      </t>
      <t>The aim of this document is to help readers understand how
      these different solution documents fit together, and also which
      documents contribute solutions that address particular
      individual requirements.</t>

      <t>Open issues, across all of the solution documents are tracked at <eref
      target="https://github.com/netmod-wg/yang-ver-dt/issues"/>.</t>
    </section>

    <section anchor="soln_documents" title="Solution Documents">
      <section anchor="module_versioning" title="Updated YANG Module Revision Handling">
	<t>In summary, <xref
	target="I-D.verdt-netmod-yang-module-versioning"/> specifies
	minimal extensions and updates to the YANG language, YANG
	Library, and YANG author guidelines to provide more flexible
	YANG module revision handling.  The intent is that these
	changes and extensions could be folded into future revisions
	of the updated specifications.  The document provides a base
	solution for all requirements except Req 2.2, Req 3.1 and Req
	3.2.</t>
	<t>The extensions and changes in the document can be summarized thus:
	<list style="symbols">
	<t>It defines a YANG extension statement to indicate where
	non-backwards-compatible changes have occurred in a module's revision
	history.</t>
	<t>It relaxes the rules for the module revision history to allow for a
	non-linear module revision history.  I.e., any given module revision may
	have multiple revisions directly derived from it.</t>
	<t>It defines a new import extension statement that restricts the
	allowed module revisions that satisfy the import to only those derived
	from a specified module revision.</t>
	<t>It defines a revision label extension statement to allow an
	informative name to be associated with a particular revision date, and
	to be used in import statements, YANG module filenames, and is available
	in YANG library.  One example of how the revision label could be used is
	to associate a semantic versioning scheme to YANG module revisions.</t>
	<t>It updates the YANG rules for changes between module revisions that
	are allowed to be classified as backwards-compatible.  In particular,
	marking a node as obsolete is no longer classified as a backwards
	compatible change.</t>
	<t>It provides updated guidance on how servers handle deprecated and
	obsolete YANG nodes and augments YANG library with additional leaves to
	report the server's behavior to clients.</t>
	<t>It provides an extension statement to allow a description statement
	to be associated with a YANG status statement, providing more
	information about why the status has changed.</t>
	<t>It defines how versioning relates to YANG instance data.</t>
	<t>It refines the guidelines for updating modules, taking into
	consideration that non-backwards-compatible changes are sometimes
	necessary for various pragmatic reasons.</t>
	</list></t>
      </section>
      <section anchor="yang_semver" title="YANG Semantic Versioning">
	<t><xref target="I-D.verdt-netmod-yang-semver"/> defines a
	semantic versioning scheme, derived from the semver.org 2.0.0
	specification, that can be used in conjunction with the
	revision label extension statement defined in <xref
	target="module_versioning"/> to allow semantic version numbers
	to be used to manage the revision lifecycle of YANG modules
	and other related YANG assets, e.g., YANG packages.  This document
	provides an enhanced solution for Req 2.1, but organizations
	authoring modules are not obliged to use this specific
	versioning scheme, and could choose a different overlaid
	versioning scheme, or none at all and rely solely on revision
	dates.</t>
	<t>The aims of the YANG semantic versioning scheme are:
	<list style="symbols">
	  <t>to generally allow clients to determine whether NBC
	  changes have occurred between two revisions from the version
	  number alone, without having to check the full revision
	  history;</t>
	  <t>to give a more informative identifier for a branched
	  revision history over revision dates alone;</t>
	  <t>to allow revision branches that contain fixes for
	  published non-latest releases.</t>
	</list>
	</t>
      </section>
      <section anchor="yang_pkgs" title="Versioned YANG packages">
	<t>The two previous solution documents primarily address
	version and revision management of individual modules.  <xref
	target="I-D.rwilton-netmod-yang-packages"/> provides a
	mechanism to group sets of related YANG modules revisions
	together, into constructs called YANG packages, and to apply
	a versioning scheme to the groups.</t>
	<t>The core part of this document are YANG module definitions
	that define a YANG package.  The definitions are used as an
	augmentation to YANG library and also in YANG instance data
	documents for offline access.</t>
	<t>The principle aims of YANG packages are:
	<list>
          <t>To define an efficient hierarchical structure that can
          precisely specify a YANG schema.</t>
	  <t>To provide an simple alternative mechanism to manage
	  conformance of modules.  Rather than checking conformance
	  against a set of individual YANG module revisions and
	  enabled features, it should be easier to check for
	  conformance against a much smaller set of YANG package
	  versions.</t>
	  <t>To provide a more efficient mechanism for servers to
	  share conformance information with clients.  Rather that
	  downloading and comparing all individual module revisions
	  and features via YANG library, the client can just check
	  whether the package version is compatible instead.  The
	  package definition could be retrieved and cached from
	  multiple sources.</t>
          <t>To define constructs that can be used for YANG schema
          selection.</t>
	  </list>
	</t>
	<t>Although the YANG packages document does not satisfy any
	versioning requirements directly, it provides foundational
	building blocks for the schema selection solution, described
	in <xref target="schema_sel"/>, that does address two of the
	requirements.</t>
      </section>
      <section anchor="schema_sel" title="Dynamic YANG schema selection">
	<t><xref target="I-D.wilton-netmod-yang-ver-selection"/>
	specifies a solution for requirements 3.1 and 3.2 via the use
	of <xref target="I-D.rwilton-netmod-yang-packages"/> and a
	model and protocol based schema selection scheme that can be
	used by clients to choose which schemas to use when
	interacting with the device from the available schema that are
	supported and advertised by the server.</t>
	<t>The dynamic YANG schema selection solution:
	<list>
          <t>allows servers to define named 'schema sets' which
          specify the schema for each supported datastore via
          references to YANG packages;</t>
          <t>can support clients choosing a single primary schema set
          (from those advertised by the server) that is used for all
          NETCONF/RESTCONF protocol sessions;</t>
	  <t>can support clients enabling multiple compatible secondary
	  schema sets that can be used on separate NETCONF/RESTCONF
	  protocol sessions;</t>
          <t>can support clients configuring named custom schema sets that
          can be selected as primary or secondary schema sets;</t>
          <t>can support different module versions via placing them in
          different schema sets;</t>
          <t>can support different schema families (e.g., IETF YANG
          modules , native vendor, or OpenConfig).</t>
          <t>allows considerable freedom in the schema selection
          capabilities that servers choose to support;</t>
	</list>
	</t>
      </section>
      <section anchor="schema_comp" title="YANG Schema Comparison">
        <t>The final piece of the solution jigsaw is a document that
        describes how to algorithmically compare YANG schema,
        addressing Req 2.2.</t>
        <t><xref target="I-D.verdt-netmod-yang-schema-comparison"/>
        specifies an algorithm that can be used to compare two
        revisions of a YANG schema to determine the overall scope of
        the changes, and a list of the specific changes, between the
        two revisions.</t>
        <t>The YANG Schema Comparison solution:
        <list>
          <t>defines a algorithm for comparing two YANG schema,
          identifying the differences and classifying them as
          backwards-compatible, non-backwards-compatible or
          editorial;</t>
          <t>can be used to compare individual YANG module
          revisions;</t>
          <t>can be used to compare YANG schema defined using YANG
          packages;</t>
          <t>can filter the comparison output to the subset of the
          schema nodes that are of interest, providing a more precise
          answer for clients to determine whether they would likely be
          affected when upgrading between two schema versions;</t>
          <t>defines YANG extensions to improve the accuracy of the
          comparison algorithm by explicitly annotating the type of
          change to statements within a YANG module, for use where the
          type of change would otherwise be ambiguous to a simple
          programmatic comparison algorithm.</t>
        </list>
        </t>
      </section>
  </section>
  <section anchor="contributor" title="Contributors">
    <t>This document grew out of the YANG module versioning design
    team that started after IETF 101. The following individuals are
    (or have been) members of that design team and have contributed to
    defining the problem, specifying the requirements, and working on
    a solution:</t>
      <t>
        <list style="symbols">
          <t>Balazs Lengyel</t>
          <t>Benoit Claise</t>
          <t>Ebben Aries</t>
	  <t>Jason Sterne</t>
          <t>Joe Clarke</t>
          <t>Juergen Schoenwaelder</t>
          <t>Mahesh Jethanandani</t>
          <t>Michael (Wangzitao)</t>
          <t>Qin Wu</t>
          <t>Reshad Rahman</t>
          <t>Rob Wilton</t>
	  <t>Susan Hares</t>
          <t>Wu Bo</t>
        </list>
      </t>
    </section>

    <section anchor="security" title="Security Considerations">
      <t>
        The document does not define any new protocol or data model. There is no security impact.
      </t>
    </section>
    <section anchor="iana" title="IANA Considerations">
      <t>None.</t>
    </section>

  </middle>
  <?rfc needLines="20"?>
  <back>
    <references title="Normative References">
      <?rfc include="reference.RFC.7950"?>
      <?rfc include="reference.I-D.ietf-netmod-yang-versioning-reqs"?>
    </references>
    <references title="Informative References">
      <?rfc include="reference.I-D.rwilton-netmod-yang-packages"?>
      <?rfc include="reference.I-D.wilton-netmod-yang-ver-selection"?>
      <?rfc include="reference.I-D.verdt-netmod-yang-module-versioning"?>
      <?rfc include="reference.I-D.verdt-netmod-yang-semver"?>
      <?rfc include="reference.I-D.verdt-netmod-yang-schema-comparison"?>
    </references>
    <?rfc needLines="100"?>
  </back>
</rfc>
